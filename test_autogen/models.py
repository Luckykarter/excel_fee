# This is an auto-generated Django model module.

from django.db import models

class LID(models.Model):
	INR = models.CharField(verbose_name="Internal Unique ID of Import L/C",max_length=8, primary_key=True)
	OWNREF = models.CharField(verbose_name="Reference",max_length=16)
	NAM = models.CharField(verbose_name="Externally Displayed Name to Identify the Contract",max_length=80)
	OWNUSR = models.CharField(verbose_name="Responsible User",max_length=8)
	OPNTRNINR = models.CharField(verbose_name="TRNINR which L/C Opened/Issued",max_length=8)
	CREDAT = models.DateField(verbose_name="Date of Creation (Opening or Registry)")
	OPNDAT = models.DateField(verbose_name="Date L/C Opened/Issued")
	CLSDAT = models.DateField(verbose_name="Date L/C Closed")
	ADVNAM = models.CharField(verbose_name="Advising Bank",max_length=40)
	ADVREF = models.CharField(verbose_name="Advising Bank Reference",max_length=16)
	AMEDAT = models.DateField(verbose_name="Date of Last Amendment")
	AMENBR = models.IntegerField(verbose_name="Counter for Number of Amendments")
	APLNAM = models.CharField(verbose_name="Applicant Address",max_length=40)
	APLREF = models.CharField(verbose_name="Applicant Reference",max_length=16)
	AVBBY = models.CharField(verbose_name="Available by",max_length=1,choices=[('A', 'BY ACCEPTANCE'), ('D', 'BY DEF PAYMENT'), ('M', 'BY MIXED PYMT'), ('N', 'BY NEGOTIATION'), ('P', 'BY PAYMENT')])
	AVBWTH = models.CharField(verbose_name="Available with",max_length=1,choices=[('A', 'Advising Bank'), ('I', 'Issuing Bank'), ('L', 'Iss. Bank of L/C'), ('O', 'Any Bank'), ('S', 'Specified Bank'), ('T', 'Transferring  Bank')])
	BENNAM = models.CharField(verbose_name="Beneficiary",max_length=40)
	BENREF = models.CharField(verbose_name="Beneficiary Reference",max_length=16)
	CHATO = models.CharField(verbose_name="Own Charges Borne by",max_length=1,choices=[('B', 'OUR FEES BORNE BY ABROAD'), ('O', 'OTHER'), ('U', 'OUR FEES BORNE BY CLIENT')])
	CNFDET = models.CharField(verbose_name="Confirmation Instructions",max_length=1,choices=[('A', 'MAY ADD'), ('C', 'CONFIRM'), ('W', 'WITHOUT')])
	EXPDAT = models.DateField(verbose_name="Date of Expiry")
	EXPPLC = models.CharField(verbose_name="Place of Expiry",max_length=29)
	LCRTYP = models.CharField(verbose_name="Form of Documentary Credit",max_length=2,choices=[('I', 'IRREVOCABLE'), ('IS', 'IRREVOCABLE STANDBY'), ('IT', 'IRREVOCABLE TRANSFERABLE'), ('ST', 'IRREVOC TRANS STANDBY')])
	NOMSPC = models.CharField(verbose_name="Amount Specification",max_length=1,choices=[('N', 'NOT EXCEEDING'), ('X', 'Accord to UCP')])
	NOMTOP = models.IntegerField(verbose_name="Amount Tolerance - Positive")
	NOMTON = models.IntegerField(verbose_name="Amount Tolerance - Negative")
	PREADVDT = models.DateField(verbose_name="Date Pre-Opened")
	RMBACT = models.CharField(verbose_name="Reimbursing Bank Account Identification",max_length=35)
	RMBCHA = models.CharField(verbose_name="Reimbursing Bank's Charges",max_length=3,choices=[('CLM', 'CLM'), ('OUR', 'OUR')])
	RMBFLG = models.CharField(verbose_name="Reimbursement Information",max_length=1)
	SHPDAT = models.DateField(verbose_name="Shipment Date")
	SHPFRO = models.CharField(verbose_name="Shipment from",max_length=65)
	PORLOA = models.CharField(verbose_name="Port of Loading",max_length=65)
	PORDIS = models.CharField(verbose_name="Port of Discharge",max_length=65)
	SHPPAR = models.CharField(verbose_name="Partial Shipment",max_length=35)
	SHPTO = models.CharField(verbose_name="For Transportation to",max_length=65)
	SHPTRS = models.CharField(verbose_name="Transshipment",max_length=35)
	STACTY = models.CharField(verbose_name="Country Code (Risk Country)",max_length=2,choices=[('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('UM', 'American Oceania'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CC', 'Cocos Island'), ('CO', 'Colombia'), ('DM', 'Commonwealth of Dominica'), ('KM', 'Comoros'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Côte d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CZ', 'Czech Republic'), ('CS', 'Czechoslovakia'), ('CD', 'Democratic Republic of Congo'), ('KP', 'Democratic Republic of Korea'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DO', 'Dominican Republic'), ('TL', 'East Timor'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('XE', 'European Community'), ('FK', 'Falkland Islands'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('PF', 'French Polynesia'), ('TF', 'French Southern and Antartic'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GB', 'Great Britain'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey, CA'), ('GF', 'Guiana'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard and McDonald Islands'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey, CA'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('KG', 'Kyrgyz Republic'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macau'), ('MK', 'Macedonia'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('IM', 'Man'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldava'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NT', 'Neutral Zone'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'North Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian territories'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('CN', "People's Republic of China"), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn Island'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('CV', 'Republic of Cape Verde'), ('CG', 'Republic of Congo'), ('CY', 'Republic of Cyprus'), ('KR', 'Republic of Korea'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('LC', 'Saint Lucia'), ('SM', 'San Marino'), ('ST', 'Sao Tome And Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Island'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SH', 'St. Helena'), ('KN', 'St. Kitts and Nevis'), ('PM', 'St. Pierre and Miquelon'), ('VC', 'St. Vincent and The Grenadines'), ('GS', 'Sth. Georgia a. Sandwich Isld.'), ('SD', 'Sudan'), ('SR', 'Surinam'), ('SJ', 'Svalbard and Jan Mayen Islands'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('CX', 'Territory of Christmas Island'), ('TH', 'Thailand'), ('TG', 'Togo'), ('TK', 'Tokelau Islands'), ('TO', 'Tonga Islands'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VA', 'Vatican City State'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('VG', 'Virgin Islands(British)'), ('VI', 'Virgin Islands(U.S)'), ('WF', 'Wallis and Futuna Islands'), ('EH', 'Western Sahara'), ('WS', 'Western Samoa'), ('YE', 'Yemen'), ('YU', 'Yugoslavia'), ('ZR', 'Zaire'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])
	STAGOD = models.CharField(verbose_name="Goods Code",max_length=6,choices=[('CHEMIE', 'Chemicals'), ('ELCGOD', 'Electric Goods'), ('MACHIN', 'Machinery'), ('TEXTIL', 'Textiles')])
	UTLNBR = models.IntegerField(verbose_name="Count of Received Document Sets")
	ADVNBR = models.IntegerField(verbose_name="Count of Advised Sub-Contracts without Documents")
	REDCLSFLG = models.CharField(verbose_name="Red/Green Clause",max_length=1)
	VER = models.CharField(verbose_name="Version Counter",max_length=4)
	LCITYP = models.CharField(verbose_name="Internal Type of L/C (Default: Normal L/C; B: Back to Back)",max_length=1)
	B2BINR = models.CharField(verbose_name="INR of LE Backing this L/C",max_length=8)
	B2BREF = models.CharField(verbose_name="Reference of Contract Backing this L/C",max_length=16)
	REVNBR = models.IntegerField(verbose_name="Number of Revolvings under L/C")
	REVTIMES = models.IntegerField(verbose_name="Revolving Times")
	REVFLG = models.CharField(verbose_name="Revolving Flag",max_length=1)
	REVAWAPL = models.CharField(verbose_name="Awaiting Applicant's Request",max_length=1)
	REVDAT = models.DateField(verbose_name="Revolving Date")
	REVCUM = models.CharField(verbose_name="Credit is Marked as Cumulative",max_length=1)
	REVTYP = models.CharField(verbose_name="Revolving Type",max_length=40,choices=[('REVPER', 'Revolving periodically'), ('REVUTI', 'Revolving upon utilization')])
	INITPTY = models.CharField(verbose_name="Applicant's Bank",max_length=3,choices=[('NIL', ''), ('APB', 'Applicant Bank'), ('NMO', 'Not ment. Ordering Party')])
	RESFLG = models.CharField(verbose_name="Reserved Contract",max_length=1,choices=[('', 'Normal Contract'), ('X', 'Reserved Contract')])
	APPRUL = models.CharField(verbose_name="Applicable Rules",max_length=30,choices=[('EUCPURR LATEST VERSION', 'EUCP + URR latest version'), ('EUCP LATEST VERSION', 'EUCP latest version'), ('ISP LATEST VERSION', 'ISP latest version'), ('UCPURR LATEST VERSION', 'UCP + URR latest version'), ('UCP LATEST VERSION', 'UCP latest version'), ('OTHR', 'any other rule')])
	APPRULRMB = models.CharField(verbose_name="Applicable Rules Reimbursement",max_length=30,choices=[('NOTURR', 'NOT SUBJECT TO URR'), ('URR LATEST VERSION', 'URR LATEST VERSION')])
	APPRULTXT = models.CharField(verbose_name="Other Applicable Rules",max_length=35)
	AUTDAT = models.DateField(verbose_name="Date of Authorization to Reimburse")
	ORDDAT = models.DateField(verbose_name="Date of customer order")
	REJFLG = models.CharField(verbose_name="Direct rejection",max_length=1)
	FTHKEY = models.CharField(verbose_name="Key from FTH",max_length=8)
	REQTYP = models.CharField(verbose_name="Type of Request",max_length=1,choices=[('D', 'Draft'), ('P', 'Pre-Opening')])
	AUTRNWFLG = models.CharField(verbose_name="Auto-Extension",max_length=1)
	AOPFLG = models.CharField(verbose_name="Assignment of Proceeds",max_length=1)
	SYNFLG = models.CharField(verbose_name="Participation Sold Flag",max_length=1)
	EXPFLG = models.CharField(verbose_name="Unlimited Guarantee",max_length=1)
	RNWNBR = models.IntegerField(verbose_name="Extension Period")
	NOTNBR = models.IntegerField(verbose_name="Notify Period")
	EXPDATFIN = models.DateField(verbose_name="Final Expiry Date")
	RNWPER = models.CharField(verbose_name="Extension Period Type",max_length=1,choices=[('D', 'Days'), ('M', 'Months'), ('Y', 'Years')])
	ADVPER = models.CharField(verbose_name="Advice Period Type",max_length=1,choices=[('D', 'Days'), ('M', 'Months')])
	NOTPER = models.CharField(verbose_name="Notify Period Type",max_length=1,choices=[('D', 'Days'), ('M', 'Months')])
	INCTRMCOD = models.CharField(verbose_name="Incoterm Code",max_length=3,choices=[('CFR', 'CFR'), ('CIF', 'CIF'), ('CIP', 'CIP'), ('CPT', 'CPT'), ('DAF', 'DAF'), ('DDP', 'DDP'), ('DDU', 'DDU'), ('DEQ', 'DEQ'), ('DES', 'DES'), ('DPU', 'DPU'), ('EXW', 'EXW'), ('FAS', 'FAS'), ('FCA', 'FCA'), ('FOB', 'FOB')])
	INCTRMFRT = models.CharField(verbose_name="Incoterm Freight",max_length=1,choices=[('-', 'Irrelevant'), ('C', 'Freight Collect'), ('P', 'Freight Prepaid')])
	INCTRMPLC = models.CharField(verbose_name="Incoterm Place",max_length=30)
	INCTRMVER = models.CharField(verbose_name="Incoterm Version",max_length=1)
	INCDFTON = models.CharField(verbose_name="incoming allNETT Dradt Drawn On selection",max_length=1)
	SHPPARS18 = models.CharField(verbose_name="Partial Shipment",max_length=11,choices=[('ALLOWED', 'allowed'), ('NOT ALLOWED', 'not allowed'), ('CONDITIONAL', 'conditional')])
	SHPTRSS18 = models.CharField(verbose_name="Transshipment",max_length=11,choices=[('ALLOWED', 'allowed'), ('NOT ALLOWED', 'not allowed'), ('CONDITIONAL', 'conditional')])
	SPCBENFLG = models.CharField(verbose_name="Special payment conditions for beneficiary exists",max_length=1)
	SPCRCBFLG = models.CharField(verbose_name="Special Payment Conditions for specified Bank only",max_length=1)
	PREPERS18 = models.IntegerField(verbose_name="Days of presentation period")
	PREPERTXTS18 = models.CharField(verbose_name="Presentation period text",max_length=35)
	DFTNBR = models.IntegerField(verbose_name="Draft Number")
	FACINR = models.CharField(verbose_name="INR of the linked Facility",max_length=8)
	ETYEXTKEY = models.CharField(verbose_name="Entity holding Contract",max_length=8)
	LCRTERM = models.CharField(verbose_name="Terms of delivery",max_length=3,choices=[('CIF', 'CIF'), ('FCR', 'FCR'), ('FOB', 'FOB')])
	CLRAVLFLG = models.CharField(verbose_name="Book out peak amount set in contract ?",max_length=1)
	PRDCOD = models.CharField(verbose_name="Product Code",max_length=3)
	PRDSUB = models.CharField(verbose_name="Product Subtype",max_length=5)
	PRDVAR = models.CharField(verbose_name="Product Variant",max_length=6)
class LIT(models.Model):
	INR = models.CharField(verbose_name="Internal Unique ID of Import L/C",max_length=8)
	ADLCND = models.CharField(verbose_name="Additional Conditions",max_length=65)
	DEFDET = models.CharField(verbose_name="Deferred Payment Details",max_length=35)
	DFTAT = models.CharField(verbose_name="Drafts at",max_length=35)
	FEETXT = models.CharField(verbose_name="Additional Details to Code for Charges",max_length=35)
	INSBNK = models.CharField(verbose_name="Instructions to Paying/Accepting/Negotiating Bank",max_length=65)
	LCRDOC = models.CharField(verbose_name="Documents Required",max_length=65)
	LCRGOD = models.CharField(verbose_name="Description of Goods",max_length=65)
	MIXDET = models.CharField(verbose_name="Mixed Payment Details",max_length=35)
	PREPER = models.CharField(verbose_name="Presentation Period",max_length=35)
	RMBCHA = models.CharField(verbose_name="Other Charges Reimbursement Authorization",max_length=35)
	SHPPER = models.CharField(verbose_name="Shipment Period",max_length=65)
	VER = models.CharField(verbose_name="Version Counter",max_length=4)
	ADLCNDAME = models.CharField(verbose_name="Additional  Conditions (Amendment History)",max_length=50)
	LCRGODAME = models.CharField(verbose_name="Description of Goods (Amendment History)",max_length=50)
	LCRDOCAME = models.CharField(verbose_name="Documents Required (Amendment History)",max_length=50)
	NARHIS = models.CharField(verbose_name="Historic Overview of Narratives",max_length=50)
	FLDMODBLK = models.CharField(verbose_name="List of Modified Fields in LIDGRP",max_length=40)
	REVNOTES = models.CharField(verbose_name="Notes to Applicant",max_length=35)
	REVCLS = models.CharField(verbose_name="Revolving Clause",max_length=65)
	AVBWTHTXT = models.CharField(verbose_name="Available in",max_length=35)
	ADDAMTCOV = models.CharField(verbose_name="Additional Amount Covered",max_length=35)
	INSBNKAME = models.CharField(verbose_name="Instructions to P/A/N (Amendment History)",max_length=50)
	CONTAG72 = models.CharField(verbose_name="Content of TAG 72",max_length=35)
	CONTAG79 = models.CharField(verbose_name="Content of TAG 79",max_length=50)
	PREPERDEF = models.CharField(verbose_name="Default content of Presentation Period",max_length=35)
	PREPERFLG = models.CharField(verbose_name="Presentation Period modified",max_length=1)
	SPCBEN = models.CharField(verbose_name="Special Payment Conditions for Beneficiary",max_length=65)
	SPCBENAME = models.CharField(verbose_name="Special payment Conditions for beneficiary (History)",max_length=50)
	SPCRCB = models.CharField(verbose_name="Special Payment Conditions for Bank Only",max_length=65)
	SPCRCBAME = models.CharField(verbose_name="Special Payment Conditions for Bank Only (History)",max_length=50)
	INC01W06 = models.CharField(verbose_name="Incoming allNETT Window ID 01W06",max_length=35)
	INC01W07 = models.CharField(verbose_name="Incoming allNETT Window ID 01W07",max_length=35)
	INCACCDET = models.CharField(verbose_name="incoming allNETT Account Details",max_length=1)
	CHKASTSTM = models.CharField(verbose_name="Stream with CHKAST",max_length=1)
	NOTTXT = models.CharField(verbose_name="Notification Information",max_length=65)
class CBS(models.Model):
	INR = models.CharField(verbose_name="Internal Unique ID of CBS Balance",max_length=8)
	OBJTYP = models.CharField(verbose_name="Object Type",max_length=6,choices=[('ACS', 'Accruing'), ('BCD', 'Import Collection'), ('BED', 'Export L/C Document Set'), ('BOD', 'Export Collection'), ('BPD', 'Advance'), ('BRD', 'Import L/C Document Set'), ('BTD', 'Export L/C Transfer Document Set'), ('CPD', 'Clean Payment'), ('ECD', 'Export Finance (Agreement)'), ('EFD', 'Export Finance (Dossier)'), ('GCD', 'Guarantee Claim'), ('GID', 'Guarantee'), ('LED', 'Export L/C'), ('LID', 'Import L/C'), ('LTD', 'Export L/C Transfer'), ('MCD', 'Manual Contract'), ('PAD', 'Participation'), ('PTE', 'Liability'), ('RCD', 'Reimbursement Claim'), ('RMD', 'Reimbursement'), ('SCD', 'Syndication Master'), ('SDD', 'Syndication Deal'), ('TRD', 'Loan')])
	OBJINR = models.CharField(verbose_name="Object INR",max_length=8)
	CBC = models.CharField(verbose_name="CBS Column",max_length=6,choices=[('ACRACR', 'ACR Balance'), ('AKZSUM', 'AKZ Balance'), ('AOPSUM', 'Assignment Balance'), ('AVGSUM', 'AVG Balance'), ('AVLSUM', 'AVL Balance'), ('AVSSUM', 'AVS Balance'), ('BALCPT', 'Capitalized Amount'), ('BALIN', 'Amortized Amount'), ('BALOUT', 'Total Utilized Amount'), ('BALSUM', 'Account Balance'), ('BE1SUM', 'BE1 Balance'), ('CCVSUM', 'Cash Cover Balance'), ('CHKSUM', 'Check Balance'), ('CNFSUM', 'CNF Balance'), ('DPUSUM', 'DPU Balance'), ('DPZSUM', 'DPZ Balance'), ('FINSUM', 'FIN Balance'), ('FIPSUM', 'FIP Balance'), ('IDCSUM', 'IDC Amount (Interest During Construction)'), ('INSSUM', 'Instalment  Balance'), ('INTSUM', 'Interest Amount'), ('LIASUM', 'Liability Balance'), ('MACSUM', 'Maximum Amount (Counter GI)'), ('MAXLCA', 'Maximum Amout L/C'), ('MAXSUM', 'Maximum Amount'), ('NOMLCA', 'Nominal Amount L/C'), ('NOMSUM', 'Nominal Amount'), ('OBACPT', 'Capitalized Amount (Own Take)'), ('OBAIN', 'Amortized Amount (Own Take)'), ('OBAOUT', 'Total Utilized Amount (Own Take)'), ('OBASUM', 'Account Balance (Own Take)'), ('OPC', 'Outstanding Open Amount (Counter GI)'), ('OPCSUM', 'Open Amount (Counter GI)'), ('OPN', 'Outstanding Open Amount'), ('OPNLCA', 'Open Amount L/C'), ('OPNSUM', 'Open Amount'), ('PRESUM', 'Preliminary Balance'), ('PTLSUM', '2nd Ben Balance'), ('REDSUM', 'RED Balance'), ('REPSUM', 'REP Balance'), ('RSKSUM', 'Own Take Amount'), ('RSVSUM', 'Reserved Amount'), ('SYNSUM', 'Syndication Balance'), ('UNSSUM', 'Unutilized Amount (Own Take)'), ('UPASUM', 'Unutilized Amount'), ('UTLSUM', 'Utilized Amount')])
	EXTID = models.CharField(verbose_name="External ID",max_length=16)
	BEGDAT = models.DateField(verbose_name="Begin of Validity (Incl.)")
	ENDDAT = models.DateField(verbose_name="End of Validity (Excl.)")
	CUR = models.CharField(verbose_name="Currency",max_length=3,choices=[('AED', 'U.A.E. Dirham'), ('AFN', 'Afghani'), ('ALL', 'Lek'), ('AMD', 'Armenian Dram'), ('AOA', 'Kwanza'), ('ARS', 'Argentine Peso'), ('AUD', 'Australian Dollar'), ('AWG', 'Aruban Guilder'), ('AZN', 'Azerbaijanian Manat'), ('BAM', 'Convertible Marks'), ('BBD', 'Barbados Dollar'), ('BDT', 'Taka'), ('BGN', 'Bulgarian Lev'), ('BHD', 'Bahraini Dinar'), ('BIF', 'Burundian Franc'), ('BMD', 'Bermudian Dollar'), ('BND', 'Brunei Dollar'), ('BOB', 'Boliviano'), ('BRL', 'Brasilian Realos'), ('BSD', 'Bahamian Dollar'), ('BTN', 'Ngultrum'), ('BWP', 'Botswana Pula'), ('BYR', 'Belarussian Ruble'), ('BZD', 'Belize Dollar'), ('CAD', 'Canadian Dollar'), ('CDF', 'Franc Congolais'), ('CHF', 'Swiss Francs'), ('CLP', 'Chilean Peso'), ('CNH', 'Yuan Renminbi / Payments'), ('CNY', 'Yuan Renminbi'), ('COP', 'Colombian Peso'), ('CRC', 'Costa Rican Colon'), ('CUP', 'Cuban Peso'), ('CVE', 'Cape Verde Escudo'), ('CZK', 'Czeck Crowns'), ('DJF', 'Djibouti Franc'), ('DKK', 'Danish Krone'), ('DOP', 'Dominican Peso'), ('DZD', 'Algerian Dinar'), ('EGP', 'Egyptian Pound'), ('ERN', 'Nakfa'), ('ETB', 'Ethiopian Birr'), ('EUR', 'Euro'), ('FJD', 'Fiji Dollar'), ('FKP', 'Falkland Islands Pound'), ('GBP', 'British Pound'), ('GEL', 'Lari'), ('GHC', 'Ghana Cedis'), ('GIP', 'Gibraltar Pound'), ('GMD', 'Dalasi'), ('GNF', 'Guinea Franc'), ('GTQ', 'Quetzal'), ('GYD', 'Guyana Dollar'), ('HKD', 'Hong Kong Dollar'), ('HNL', 'Lempira'), ('HRK', 'Croatian Kuna'), ('HTG', 'Haiti Gourde'), ('HUF', 'Hungarian Forint'), ('IDR', 'Indonesian Rupiah'), ('ILS', 'Israeli New Shekel'), ('INR', 'Indian Rupies'), ('IQD', 'Iraqi Dinar'), ('IRR', 'Iran Rial'), ('ISK', 'Iceland Krona'), ('JMD', 'Jamaican Dollar'), ('JOD', 'Jordanian Dinars'), ('JPY', 'Japanese Yen'), ('KES', 'Kenyan Shilling'), ('KGS', 'Som'), ('KHR', 'Riel'), ('KMF', 'Comoro Franc'), ('KPW', 'North Korean Won'), ('KRW', 'South Korean Won'), ('KWD', 'Kuwaiti Dinar'), ('KYD', 'Cayman Islands Dollar'), ('KZT', 'Tenge'), ('LAK', 'Kip'), ('LBP', 'Lebanese Pound'), ('LKR', 'Sri Lankan Rupee'), ('LRD', 'Liberian Dollar'), ('LSL', 'Loti'), ('LYD', 'Libyan Dinar'), ('MAD', 'Maroccan Dirham'), ('MDL', 'Moldovan Leu'), ('MGA', 'Madagaskar Ariary'), ('MGF', 'Madagascan Franc'), ('MKD', 'Denar'), ('MMK', 'Kyat'), ('MNT', 'Mongolian Tögrög'), ('MOP', 'Pataka'), ('MRO', 'Mauretanian Ouguiya'), ('MUR', 'Mauretanian Rupee'), ('MVR', 'Maledives Rufiyaa'), ('MWK', 'Malawian Kwacha'), ('MWR', 'Rufiyaa'), ('MXN', 'Mexican Peso'), ('MYR', 'Malaysian Ringgit'), ('MZN', 'Metical'), ('NAD', 'Namibian Dollar'), ('NGN', 'Naira'), ('NIO', 'Cordoba Oro'), ('NOK', 'Norwegian Krowne'), ('NPR', 'Nepalese Rupee'), ('NZD', 'New Zealand Dollar'), ('OMR', 'Omani Rial'), ('PAB', 'Balboa'), ('PEN', 'Nuevo Sol'), ('PGK', 'Kina'), ('PHP', 'Philippine Peso'), ('PKR', 'Pakistan Rupee'), ('PLN', 'Polish Zloty'), ('PYG', 'Guarani'), ('QAR', 'Riyal'), ('ROL', 'Old Romanian Leu'), ('RON', 'Romanian Leu'), ('RSD', 'Serbian Dinar'), ('RUB', 'Russian Ruble'), ('RWF', 'Rwanda Franc'), ('SAR', 'Saudi Riyal'), ('SBD', 'Solomon Islands Dollar'), ('SCR', 'Seychelles Rupee'), ('SDD', 'Sudanese Dinar'), ('SEK', 'Swedish Krona'), ('SGD', 'Singapore Dollar'), ('SHP', 'Saint Helena Pound'), ('SIE', 'Euro, Slovenia'), ('SLL', 'Leone'), ('SOS', 'Somali Shilling'), ('SRD', 'Surinam Dollar'), ('STD', 'Dobra'), ('SVC', 'Colon'), ('SYP', 'Syrian Pound'), ('SZL', 'Lilangeni'), ('THB', 'Thai Baht'), ('TJS', 'Somoni'), ('TMM', 'Manat'), ('TND', 'Tunisian Dinar'), ('TOP', "Pa'anga"), ('TRL', 'Turkish Lira (old)'), ('TRY', 'Turkish Lira'), ('TTD', 'Trinidad and Tobago Dollar'), ('TWD', 'Taiwan Dollar'), ('TZS', 'Tanzanian Shilling'), ('UAH', 'Hryvnia'), ('UGX', 'Uganda Shilling'), ('USD', 'US Dollar'), ('UYU', 'Peso Uruguay'), ('UZS', 'Uzbekistan Som'), ('VEB', 'Venezuelan bolivar'), ('VND', 'Vietnamese Dong'), ('VUV', 'Vatu'), ('WST', 'Samoan Tala'), ('XAF', 'CFA Franc - BEAC'), ('XCD', 'East Caribean Dollar'), ('XOF', 'CFA Franc - BCEAO'), ('XPF', 'Central Pacific Franc'), ('YER', 'Yemeni Rial'), ('ZAR', 'South African Rand'), ('ZMK', 'Zambian Kwacha old'), ('ZMW', 'Zambian Kwacha'), ('ZWD', 'Zimbabwe Dollar')])
	AMT = models.IntegerField(verbose_name="Balance")
	CBEINR = models.CharField(verbose_name="INR of Originating CBE Entry",max_length=8)
	XRFCUR = models.CharField(verbose_name="Currency of Converted Amount",max_length=3)
	XRFAMT = models.IntegerField(verbose_name="Converted Balance")
	COMCUR = models.CharField(verbose_name="Currency of Committed Balance",max_length=3)
	COMAMT = models.IntegerField(verbose_name="Committed Balance")
	XCOCUR = models.CharField(verbose_name="Currency of Converted Committed Balance",max_length=3)
	XCOAMT = models.IntegerField(verbose_name="Converted Committed Balance")

